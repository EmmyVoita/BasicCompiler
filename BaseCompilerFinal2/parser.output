State 13 conflicts: 3 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Block

    2 Block: LCBRA BlockList RCBRA

    3 BlockList: ε
    4          | BlockList StmtList
    5          | BlockList VarDecl

    6 VarDecl: TYPE IDENTIFIER SEMICOLON

    7 StmtList: Stmt StmtList
    8         | Stmt

    9 Stmt: SEMICOLON
   10     | Expr SEMICOLON

   11 Expr: IDENTIFIER
   12     | IDENTIFIER EQ NonAssignExpr
   13     | WRITE IDENTIFIER

   14 NonAssignExpr: IDENTIFIER
   15              | IDENTIFIER OPERATOR NonAssignExpr
   16              | NUMBER OPERATOR NonAssignExpr
   17              | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPE <string> (258) 6
    IDENTIFIER <string> (259) 6 11 12 13 14 15
    SEMICOLON <char> (260) 6 9 10
    LCBRA <char> (261) 2
    RCBRA <char> (262) 2
    EQ <char> (263) 12
    OPERATOR <string> (264) 15 16
    NUMBER <number> (265) 16 17
    WRITE (266) 13


Nonterminals, with rules where they appear

    $accept (12)
        on left: 0
    Program <ast> (13)
        on left: 1
        on right: 0
    Block <ast> (14)
        on left: 2
        on right: 1
    BlockList <ast> (15)
        on left: 3 4 5
        on right: 2 4 5
    VarDecl <ast> (16)
        on left: 6
        on right: 5
    StmtList <ast> (17)
        on left: 7 8
        on right: 4 7
    Stmt <ast> (18)
        on left: 9 10
        on right: 7 8
    Expr <ast> (19)
        on left: 11 12 13
        on right: 10
    NonAssignExpr <ast> (20)
        on left: 14 15 16 17
        on right: 12 15 16


State 0

    0 $accept: • Program $end

    LCBRA  shift, and go to state 1

    Program  go to state 2
    Block    go to state 3


State 1

    2 Block: LCBRA • BlockList RCBRA

    $default  reduce using rule 3 (BlockList)

    BlockList  go to state 4


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 5


State 3

    1 Program: Block •

    $default  reduce using rule 1 (Program)


State 4

    2 Block: LCBRA BlockList • RCBRA
    4 BlockList: BlockList • StmtList
    5          | BlockList • VarDecl

    TYPE        shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    SEMICOLON   shift, and go to state 8
    RCBRA       shift, and go to state 9
    WRITE       shift, and go to state 10

    VarDecl   go to state 11
    StmtList  go to state 12
    Stmt      go to state 13
    Expr      go to state 14


State 5

    0 $accept: Program $end •

    $default  accept


State 6

    6 VarDecl: TYPE • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 15


State 7

   11 Expr: IDENTIFIER •
   12     | IDENTIFIER • EQ NonAssignExpr

    EQ  shift, and go to state 16

    $default  reduce using rule 11 (Expr)


State 8

    9 Stmt: SEMICOLON •

    $default  reduce using rule 9 (Stmt)


State 9

    2 Block: LCBRA BlockList RCBRA •

    $default  reduce using rule 2 (Block)


State 10

   13 Expr: WRITE • IDENTIFIER

    IDENTIFIER  shift, and go to state 17


State 11

    5 BlockList: BlockList VarDecl •

    $default  reduce using rule 5 (BlockList)


State 12

    4 BlockList: BlockList StmtList •

    $default  reduce using rule 4 (BlockList)


State 13

    7 StmtList: Stmt • StmtList
    8         | Stmt •

    IDENTIFIER  shift, and go to state 7
    SEMICOLON   shift, and go to state 8
    WRITE       shift, and go to state 10

    IDENTIFIER  [reduce using rule 8 (StmtList)]
    SEMICOLON   [reduce using rule 8 (StmtList)]
    WRITE       [reduce using rule 8 (StmtList)]
    $default    reduce using rule 8 (StmtList)

    StmtList  go to state 18
    Stmt      go to state 13
    Expr      go to state 14


State 14

   10 Stmt: Expr • SEMICOLON

    SEMICOLON  shift, and go to state 19


State 15

    6 VarDecl: TYPE IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 20


State 16

   12 Expr: IDENTIFIER EQ • NonAssignExpr

    IDENTIFIER  shift, and go to state 21
    NUMBER      shift, and go to state 22

    NonAssignExpr  go to state 23


State 17

   13 Expr: WRITE IDENTIFIER •

    $default  reduce using rule 13 (Expr)


State 18

    7 StmtList: Stmt StmtList •

    $default  reduce using rule 7 (StmtList)


State 19

   10 Stmt: Expr SEMICOLON •

    $default  reduce using rule 10 (Stmt)


State 20

    6 VarDecl: TYPE IDENTIFIER SEMICOLON •

    $default  reduce using rule 6 (VarDecl)


State 21

   14 NonAssignExpr: IDENTIFIER •
   15              | IDENTIFIER • OPERATOR NonAssignExpr

    OPERATOR  shift, and go to state 24

    $default  reduce using rule 14 (NonAssignExpr)


State 22

   16 NonAssignExpr: NUMBER • OPERATOR NonAssignExpr
   17              | NUMBER •

    OPERATOR  shift, and go to state 25

    $default  reduce using rule 17 (NonAssignExpr)


State 23

   12 Expr: IDENTIFIER EQ NonAssignExpr •

    $default  reduce using rule 12 (Expr)


State 24

   15 NonAssignExpr: IDENTIFIER OPERATOR • NonAssignExpr

    IDENTIFIER  shift, and go to state 21
    NUMBER      shift, and go to state 22

    NonAssignExpr  go to state 26


State 25

   16 NonAssignExpr: NUMBER OPERATOR • NonAssignExpr

    IDENTIFIER  shift, and go to state 21
    NUMBER      shift, and go to state 22

    NonAssignExpr  go to state 27


State 26

   15 NonAssignExpr: IDENTIFIER OPERATOR NonAssignExpr •

    $default  reduce using rule 15 (NonAssignExpr)


State 27

   16 NonAssignExpr: NUMBER OPERATOR NonAssignExpr •

    $default  reduce using rule 16 (NonAssignExpr)
